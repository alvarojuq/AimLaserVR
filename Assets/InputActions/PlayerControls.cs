//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.8.1
//     from Assets/InputActions/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""2e38abd9-ea12-48c2-b053-b22c2938a78b"",
            ""actions"": [
                {
                    ""name"": ""LaserFire"",
                    ""type"": ""Button"",
                    ""id"": ""b1671a70-d7d5-4856-ae19-0dc77275f285"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""HoldBreath"",
                    ""type"": ""Button"",
                    ""id"": ""4b3e7a78-844b-4b42-95c0-3ecac76a3453"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchInputMode"",
                    ""type"": ""Button"",
                    ""id"": ""0da08233-b1a2-4abb-8ad3-5b96541869a3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""e347f751-f522-4a71-8129-f0b8662cfce0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputUp"",
                    ""type"": ""Button"",
                    ""id"": ""2e7014ce-4459-4676-abb5-afaa6d5cccd4"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InputDown"",
                    ""type"": ""Button"",
                    ""id"": ""b8db397a-6cae-4606-b4f6-ed43f1b1122a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""07fa6dae-e7c2-4ac3-a5ee-346383c92ebd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LaserFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3aa01ff4-3663-4717-9661-5bb1a74dad27"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LaserFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7d763df-8380-497d-91ef-2e3aff847c1d"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LaserFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89fda819-13b0-4c7f-8bc7-4862a54f5b07"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldBreath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8831f1b3-5465-4c3d-a0b3-c130a50e8cd3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldBreath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32e6fb71-03ab-45b1-99b3-e81d21288aaa"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HoldBreath"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""455a1321-947b-4ace-a92a-1f1e1d192f70"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchInputMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""995a5b99-ea78-464d-839d-17e0a55af1b9"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchInputMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c6ce615-fbb8-400a-af50-5c72745af010"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchInputMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ef57844-a220-4c65-a6b5-968b714e2704"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e88ec46-cea2-4d5e-9b60-9b42afb1b5de"",
                    ""path"": ""<DualShockGamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0bdc69aa-e0a0-414d-8bb2-b5b5279b0fe5"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d1a079b-1d62-433f-a2ba-f8875b680761"",
                    ""path"": ""<XRController>{LeftHand}/{Menu}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1deb8e01-379b-47f5-b42f-e02d02f6e5d4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15486fe1-7892-44eb-9327-d1c02575a988"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5c320c4-f62a-4b0d-8ea3-d9480d03d32d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b966dec0-5900-4943-a42a-c366d5e69bd8"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InputUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_LaserFire = m_Default.FindAction("LaserFire", throwIfNotFound: true);
        m_Default_HoldBreath = m_Default.FindAction("HoldBreath", throwIfNotFound: true);
        m_Default_SwitchInputMode = m_Default.FindAction("SwitchInputMode", throwIfNotFound: true);
        m_Default_Pause = m_Default.FindAction("Pause", throwIfNotFound: true);
        m_Default_InputUp = m_Default.FindAction("InputUp", throwIfNotFound: true);
        m_Default_InputDown = m_Default.FindAction("InputDown", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        Debug.Assert(!m_Default.enabled, "This will cause a leak and performance issues, PlayerControls.Default.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private List<IDefaultActions> m_DefaultActionsCallbackInterfaces = new List<IDefaultActions>();
    private readonly InputAction m_Default_LaserFire;
    private readonly InputAction m_Default_HoldBreath;
    private readonly InputAction m_Default_SwitchInputMode;
    private readonly InputAction m_Default_Pause;
    private readonly InputAction m_Default_InputUp;
    private readonly InputAction m_Default_InputDown;
    public struct DefaultActions
    {
        private @PlayerControls m_Wrapper;
        public DefaultActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LaserFire => m_Wrapper.m_Default_LaserFire;
        public InputAction @HoldBreath => m_Wrapper.m_Default_HoldBreath;
        public InputAction @SwitchInputMode => m_Wrapper.m_Default_SwitchInputMode;
        public InputAction @Pause => m_Wrapper.m_Default_Pause;
        public InputAction @InputUp => m_Wrapper.m_Default_InputUp;
        public InputAction @InputDown => m_Wrapper.m_Default_InputDown;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Add(instance);
            @LaserFire.started += instance.OnLaserFire;
            @LaserFire.performed += instance.OnLaserFire;
            @LaserFire.canceled += instance.OnLaserFire;
            @HoldBreath.started += instance.OnHoldBreath;
            @HoldBreath.performed += instance.OnHoldBreath;
            @HoldBreath.canceled += instance.OnHoldBreath;
            @SwitchInputMode.started += instance.OnSwitchInputMode;
            @SwitchInputMode.performed += instance.OnSwitchInputMode;
            @SwitchInputMode.canceled += instance.OnSwitchInputMode;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @InputUp.started += instance.OnInputUp;
            @InputUp.performed += instance.OnInputUp;
            @InputUp.canceled += instance.OnInputUp;
            @InputDown.started += instance.OnInputDown;
            @InputDown.performed += instance.OnInputDown;
            @InputDown.canceled += instance.OnInputDown;
        }

        private void UnregisterCallbacks(IDefaultActions instance)
        {
            @LaserFire.started -= instance.OnLaserFire;
            @LaserFire.performed -= instance.OnLaserFire;
            @LaserFire.canceled -= instance.OnLaserFire;
            @HoldBreath.started -= instance.OnHoldBreath;
            @HoldBreath.performed -= instance.OnHoldBreath;
            @HoldBreath.canceled -= instance.OnHoldBreath;
            @SwitchInputMode.started -= instance.OnSwitchInputMode;
            @SwitchInputMode.performed -= instance.OnSwitchInputMode;
            @SwitchInputMode.canceled -= instance.OnSwitchInputMode;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @InputUp.started -= instance.OnInputUp;
            @InputUp.performed -= instance.OnInputUp;
            @InputUp.canceled -= instance.OnInputUp;
            @InputDown.started -= instance.OnInputDown;
            @InputDown.performed -= instance.OnInputDown;
            @InputDown.canceled -= instance.OnInputDown;
        }

        public void RemoveCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    public interface IDefaultActions
    {
        void OnLaserFire(InputAction.CallbackContext context);
        void OnHoldBreath(InputAction.CallbackContext context);
        void OnSwitchInputMode(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnInputUp(InputAction.CallbackContext context);
        void OnInputDown(InputAction.CallbackContext context);
    }
}
